7/22

PlayerController
	플레이어의 움직임을 제어 : Move()
		키보드의 입력을 통해 상하좌우로 이동: 필요한 파라미터 = 방향, 속도
		Map 밖으로 나가지 않도록 Camera.main.WorldToViewportPoint 를 활용하여 처리

	총알 발사를 제어 : Fire()
		자동적으로 리로딩 속도와 power에 따라 총알 발사: 필요한 파라미터 reload delay , power
			이때 총알의 딜레이를 코루틴으로 구현
		powerlevel에 따라 나가는 총알의 종류를 바꿈 bullet 객체 배열에 저장

BulletController
	총알의 움직임을 제어 : AddForce

	총알의 데미지 제어
	총알이 소멸되지 않는 문제는 border의 콜라이더 충돌 판정을 통해 해결

7/23
	총알 종류 변경 및 오일러 방향 정하는법 과외받음

7/24
	BackgroundScroller
		2개의 배경 오브젝트를 역방향으로 이동시키며 무한 스크롤을 통해 비행기가 앞으로 전진하듯이 연출
		배경을 위한 오브젝트와 배경의 별을 위한 오브젝트 2개로 나누어 스크롤 속도 조정을 통해 더욱 다이나믹하게 연출
	Fire() : 총알이 전투기의 앞이 아니라 전투기의 중앙에서 발사되는 점 수정 
	
	SoundManager를 생성하여 소리 관리 ( 총알 발사 소리, 적과의 충돌소리, 적 사망시 소리 등)
	
	적 오브젝트 생성	

	적 오브젝트 생성 및 충돌시 총알 소멸 + 적 hp에 dmg만큼의 피해, hp <=0 경우 적 파괴 및 ItemDrop 로직 설계 
	-> hp <= 0 오브젝트 소멸
		파워업, 폭탄, Hp회복 아이템 구성 및 플레이어와 아이템 충돌 판정 및 아이템 destroy	

	적과의 충돌시 PlayerHp 감소

	플레이어 파워에 따라 발사되는 총알 변경

7/25
	EnemyCreator
		코루틴을 활용해서 일정시간에 랜덤 몬스터를 랜덤 위치에 생성 및 -y 축 방향으로 등속 운동
		생성된 적군은 플레이어와의 각도를 계산하여 그 방향으로 총알 발사.
	LobbyScene
		로비씬과 게임씬을 구분하여 터치시 게임씬으로 넘어갈 수 있게 구성
	코드 다듬고 캡슐화 진행
